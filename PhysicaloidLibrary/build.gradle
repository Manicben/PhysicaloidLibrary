plugins {
    id 'com.android.library'
    id 'maven-publish'
}

repositories {
    google()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

group = 'com.manicben'
version = '1.0.0'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 12
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation('com.google.guava:guava:30.1.1-android')
}

// Build a jar with source files
task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs

    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

task javadoc(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }

    exclude "**/R**"
    exclude "**/BuildConfig*"

    options.encoding 'utf-8'
    options {
        addStringOption 'docencoding', 'utf-8'
        addStringOption 'charset', 'utf-8'
        links 'https://docs.oracle.com/javase/7/docs/api/'
        links 'https://d.android.com/reference'
        links 'https://developer.android.com/reference/androidx/'
    }
}

// Build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir

    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

afterEvaluate {
    // fixes issue where javadoc can't find android symbols ref: http://stackoverflow.com/a/34572606
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompileProvider.get().classpath.files
    })

    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release

                artifact sourcesJar
                artifact javadocJar

                groupId = 'com.manicben'
                artifactId = 'PhysicaloidLibrary'
                version = '1.0.0'
            }
        }
    }
}
